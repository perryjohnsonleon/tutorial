<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <script type="text/javascript" src="js/jquery-3.2.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
  let itemPrice_arry=[],itemPrice_matrix=[],stock_name="";
  function delayedadd(n1,n2,delaytime){
    return new Promise(function(resolve,reject){
       window.setTimeout(function(){
        let fetchUrl_str="https://ws.api.cnyes.com/ws/api/v1/charting/history?resolution=1&symbol=TWS:1102:STOCK&quote=1"
        $.getJSON(fetchUrl_str,function(data){
            $.each(data,function(key1,item1){
              if (key1 === 'data') {
                  console.log(item1);
                  var itemData = item1 ;          
              $.each(itemData,function(key2,item2){
                if (key2  === 'quote' ) {
                    var itemData2 = item2;	
                    $.each(itemData2,function(key3,item3){  
                        if (key3 === '200009') {
                          console.log(item3) ;
                          stock_name=item3;
                        }
                    })          
                }
                if (key2  === 'c' ) {
              //    console.log(999,item2);	  
                  itemPrice_arry = item2;
                  itemPrice_matrix = [...itemPrice_arry].reverse() ;	      		
                  console.log(999,itemPrice_matrix);	               
			   }
                });       
            }
            });
          })
	//	console.log("@@@@",itemPrice_matrix) ;  
        resolve("abcdefgh");
       },delaytime);
      //  console.log(itemPrice_matrix);
      //  resolve(itemPrice_matrix);
    });
  }

  async function test(){
    let result= await delayedadd(1,2,2000) ;
    console.log("&&" + result);
    const xValues = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247];
//    let original = xValues ;
    let original = [41.5,41.7,41.6,41.65,41.65,41.65,41.65,41.75,41.75,41.7,41.75,41.75,41.7,41.75,41.7,41.7,41.7,41.7,41.7,41.7,41.75,41.7,41.75,41.65,41.75,41.75,41.7,41.75,41.7,41.7,41.6,41.6,41.75,41.7,41.7,41.7,41.75,41.75,41.75,41.75,41.75,41.75,41.75,41.75,41.75,41.75,41.75,41.75,41.75,41.85,41.75,41.8,41.85,41.8,41.85,41.85,41.85,41.8,41.7,41.7,41.7,41.65,41.65,41.65,41.65,41.6,41.65,41.65,41.65,41.65,41.5,41.6,41.6,41.6,41.55,41.5,41.55,41.6,41.55,41.55,41.55,41.55,41.55,41.6,41.65,41.6,41.6,41.6,41.6,41.6,41.6,41.55,41.6,41.6,41.65,41.65,41.6,41.6,41.65,41.55,41.65,41.65,41.6,41.65,41.6,41.65,41.6,41.6,41.65,41.7,41.65,41.65,41.7,41.7,41.65,41.65,41.65,41.6,41.6,41.55,41.65,41.6,41.65,41.6,41.6,41.6,41.65,41.55,41.6,41.6,41.65,41.6,41.55,41.55,41.5,41.5,41.45,41.4,41.4,41.4,41.4,41.45,41.45,41.45,41.45,41.45,41.4,41.45,41.45,41.45,41.45,41.4,41.4,41.35,41.4,41.4,41.4,41.4,41.4,41.35,41.35,41.3,41.3,41.3,41.4,41.4,41.4,41.4,41.4,41.35,41.35,41.35,41.3,41.35,41.4,41.4,41.4,41.3,41.35,41.35,41.4,41.4,41.35,41.4,41.35,41.3,41.3,41.3,41.25,41.25,41.25,41.2,41.2,41.25,41.2,41.2,41.25,41.2,41.25,41.25,41.2,41.2,41.2,41.25,41.15,41.15,41.1,41.1,41.15,41.15,41.1,41.15,41.15,41.15,41.15,41.15,41.15,41.15,41.15,41.2,41.2,41.2,41.15,41.1,41.1,41.05,41.05,41.05,41.1,41.1,41.1,41.1,41.05,41.1,41.05,41.05,41.1,41.1,41.15,41.1,41.15,41.1,41.15,41.15,41.1,41.05,41.0,40.95,41.0] ;
    let yValues = original.map(n => n );
    // 轉成 { x, y } 物件陣列
    let points = yValues.map((y, i) => ({ x: xValues[i], y }));
    var graph=new Chart(document.getElementById('myChart'), {
      type: 'line',
      data: {
        datasets: [{
          label: '範例折線',
          data: points,
          borderColor: 'blue',
          cubicInterpolationMode: 'monotone',
          tension: 0.4,
          backgroundColor: 'rgba(0,0,255,0.2)',
        }]
      },
      options: {
        scales: {
          x: {
            type: 'linear', // 指定為數值型 x 軸
            title: { display: true, text: 'X 軸（數值）' },
          },
          y: {
            beginAtZero: false,
            title: { display: true, text: 'Y 軸（數值）' },
          }
        }
      }
    });
   }
  </script>


 
</head>
<body>
<canvas id="myChart" width="400" height="200"></canvas>
<button onclick="test();" style="padding:10px,30px ;">TEST</button>
</body>
</html>
