<html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <title></title>
        <meta http-equiv="content-type" content="text/html;charset=utf-8" />	
        <script type="text/javascript" src="js/jquery-3.2.1.min.js"></script>
        <!-- Favicon-->
        <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
        <!-- Bootstrap icons-->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />
        <!-- Core theme CSS (includes Bootstrap)-->
        <link href="css/styles.css" rel="stylesheet" />
    </head>

<body>
<!-- button id="myButton" onclick="alert('OK!')">按鈕</button -->
    <main class="flex-shrink-0">
    <div class="my-5 text-center text-xl-start">
    <table style="width:95%">
    <tr>
    <td style="width:100%">
      <div id="hiddenMsg1">
      </div>	  
      <div id="hiddenElement1">

      </div>
    </td>  
    </table>
</div>
 </main>
 <script>
    let show_lotto39Rpt="" , stockNo="99" ;
    function step1(stockNo) {
        return new Promise((resolve) => {
        setTimeout(() => {
			// Step1 URL Begin
			   $("#hiddenMsg1").html("<span>Wait data ...<span>"); 
			   /*
			   if (mask_item1.style.display == "none" )
				   hiddenMsg1.style.display = "block" ;
				   var urlStr= "https://marketinfo.api.cnyes.com/mi/api/v1/financialIndicator/revenue/TWS:" + stockNo + ":STOCK?year=5&to=1572364800";
               */
			   fetch('https://zan01.com/dailycash/trend/?back=0&period=200')
                .then(response => response.text())
                .then(html => {
                 // Parse the HTML string into a DOM object
		          console.log ('pass 1!')
                  const parser = new DOMParser();
                  const doc = parser.parseFromString(html, 'text/html');
                 // Filter tags (e.g., <p> tags)
                 const paragraphs = doc.querySelectorAll('tbody');
                 paragraphs.forEach(pre => {
		         show_lotto39Rpt=pre.textContent ;
		         /*
		           console.log ('pass 2!') ;
                   console.log(pre.textContent); // Logs the text content of each <p> tag
                 */
		         });
                })
                .catch(error => console.error('Error fetching HTML:', error));
			    // Step1 URL End
                // console.log("Step 1 完成");
                resolve("Step 1 結果");
        }, 700);
       });
    }

/*
   function step2() {
        return new Promise((resolve) => {
        setTimeout(() => {		 
			 tr_line ="",show_YearRpt="" ;
			 var item2comma=0 ;
             for (let i = 0; i < itemYear_arry1.length; i++) {
				 item2comma = (itemYear_arry2[i]/1000) + "" ;
				 item2comma = item2comma.replace(/\B(?<!\.\d*)(?=(\d{3})+(?!\d))/g, ",")
				 tr_line = tr_line + '<tr><td>' + timestampToTime(itemYear_arry1[i]) + '</td><td>' + item2comma + '</td><td>' +　itemYear_arry3[i]　+'</td></tr>' ;
			 } ;
            // console.log("Pass3:" + tr_line) ;
           // console.log("Step 2 完成");
           resolve("Step 2 結果");
        }, 500);
      });
   }

   function step3() {
        return new Promise((resolve) => {
        setTimeout(() => {						 
		show_YearRpt='<table width="30%" style="color: rgb(132, 141, 151); font-size: 14px; text-align: right;">' + '<thead><tr><td style="width:40%">[' + itemYear_stockname + ']月財報</td><td style="width:40%">營收(千元)</td><td style="width:20%">年增率</td></thead><tbody>' + tr_line  + '</tbody></table>'  ;
         // console.log("Step 3 完成");
         resolve("Step 3 結果");
        }, 250);
    });
   }
   */
   
   function step2() {
        return new Promise((resolve) => {
        setTimeout(() => {
            $("#hiddenElement1").html(show_lotto39Rpt); 
	
         // console.log("Step 4 完成");
         resolve("Step 2 結果");
        }, 10);
        });
   }

   // 使用 then 來串接 Promise，依序執行
   // ==========================
   
  step1()
      .then(result1 => {
        console.log(result1); // Step 1 結果
        return step2();        // 等 step2 完成後才進行下一步
       })
      .catch(error => {
        console.log("出現錯誤: ", error);
       });
	  
  async function executeStepsSequentially(stockNo) {
       try {
          let result1 = await step1(stockNo);
        // console.log(result1); // Step 1 結果
       /*
          let result2 = await step2();
        // console.log(result2); // Step 2 結果

          let result3 = await step3();
        // console.log(result3); // Step 3 結果
        
          let result4 = await step4() ; 

        // console.log(result4); // Step 4 結果 

        // console.log("所有步驟完成");
       */
	   } catch (error) {
          console.log("出現錯誤: ", error);
      }
   }
	 
  executeStepsSequentially(stockNo); 
  console.log ('pass 0!')
  /*
   move from here !
  */
  console.log ('pass 99!') ;
</script>
</body>
</html>